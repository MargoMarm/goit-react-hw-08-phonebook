{"version":3,"file":"static/js/143.1960385a.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/SortedBtns/SortedBtns.styled.jsx","components/SortedBtns/SortedBtns.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-around;\n  gap: 40px;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\nexport const ContactsWrapper = styled.div`\n  width: 400px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  padding: 25px;\n  margin-top: 12px;\n  background-color: white;\n`;\n\nexport const Message = styled.p`\n  font-size: 30px;\n  font-weight: 400;\n  margin:0;\n  text-align:center;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectSortedAlphabetic = state => state.contacts.sortedAlphabetic;\n\nexport const selectRecentlyAdded = state => state.contacts.recentlyAdded;\n\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\t(contacts, filterValue) => {\n    const filtredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return filtredContacts;\n  }\n);\n\n","import styled from '@emotion/styled';\n\nexport const LoaderStyled = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 15px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 5px groove #73dbeb;\n  padding: 10px 0;\n`;\n\nexport const Btn = styled.button`\n  width: 32px;\n  height: 32px;\n  margin-left: 10px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: ${proprs => (proprs.delete ? '#e55146' : '#009688')};\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #a5a4a47d;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;","import styled from '@emotion/styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(0 0 0 / 10%);\n  z-index: 100;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: block;\n  height: 30px;\n  width: 30px;\n  right: 10px;\n  z-index: 1;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n\n`;\n\nexport const Icon = styled(AiOutlineCloseCircle)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: color 200ms linear;\n  \n  :hover {\n\tcolor: #0fc1dd;\n  }\n\n`;\n\nexport const Form = styled.form`\nposition: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  background-color: white;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/operation';\nimport {\n  BtnClose,\n  ModalWindow,\n  Overlay,\n  Form,\n  Input,\n  AddButton,\n  Icon,\n} from './Modal.styled';\nimport { RiContactsLine } from 'react-icons/ri';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst Modal = ({ contactInfo, toggleOpen }) => {\n  const { name, number, id } = contactInfo;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value, id };\n\t  dispatch(editContact(contact));\n\t  toggleOpen();\n  };\n\n  return (\n    <Overlay>\n      <ModalWindow>\n        <Form onSubmit={handleSubmit}>\n          <BtnClose onClick={toggleOpen}>\n            <Icon size=\"30\" />\n          </BtnClose>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n            defaultValue={name}\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Number\"\n            defaultValue={number}\n          />\n          <AddButton type=\"submit\">\n            <span>Edit contacts </span>{' '}\n            {isLoading ? <Loader /> : <RiContactsLine size=\"20\" />}\n          </AddButton>\n        </Form>\n      </ModalWindow>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const SortBtn = styled.button`\n  min-width: 180px;\n  height: 30px;\n  margin: ;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 3px 4px 20px 0px, rgba(0, 0, 0, 0.1) 1px 5px 4px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n      rgba(0, 0, 0, 0.1) 3px 4px 20px 0px, rgba(0, 0, 0, 0.1) 1px 5px 4px 0px;\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;\n","import {\n  sortByAdded,\n  sortByName,\n} from 'redux/contacts/contactsSlice';\nimport {\n  selectSortedAlphabetic,\n  selectRecentlyAdded,\n} from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  TbSortAscendingLetters,\n  TbSortDescendingLetters,\n  TbSortAscending2,\n  TbSortDescending2,\n} from 'react-icons/tb';\nimport { SortBtn, BtnWrapper } from './SortedBtns.styled';\n\nconst SortedBtns = () => {\n  const sortedAlphabetic = useSelector(selectSortedAlphabetic);\n  const recentlyAdded = useSelector(selectRecentlyAdded);\n  const dispatch = useDispatch();\n  return (\n    <BtnWrapper>\n      <SortBtn onClick={() => dispatch(sortByName())}>\n        Sort by name\n        {sortedAlphabetic ? (\n          <TbSortDescendingLetters size=\"20\" />\n        ) : (\n          <TbSortAscendingLetters size=\"20\" />\n        )}\n      </SortBtn>\n      <SortBtn onClick={() => dispatch(sortByAdded())}>\n        Recently added{' '}\n        {recentlyAdded ? (\n          <TbSortAscending2 size=\"20\" />\n        ) : (\n          <TbSortDescending2 size=\"20\" />\n        )}\n      </SortBtn>\n    </BtnWrapper>\n  );\n};\n\nexport default SortedBtns;\n","import { List, ListItem, Btn, BtnWrapper, LoaderStyled } from './ContactsList.styled';\nimport Modal from '../Modal/Modal';\nimport { RiDeleteBin2Line, RiEditLine } from 'react-icons/ri';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport SortedBtns from 'components/SortedBtns/SortedBtns';\nimport { useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [targetContact, setTargetContact] = useState({});\n\n  const toggleOpen = () => setIsModalOpen(!isModalOpen);\n\n  const handleClick = e => {\n    const id = e.currentTarget.parentNode.parentNode.dataset.id;\n    const targetContact = visibleContacts.find(contact => contact.id === id);\n    setTargetContact(targetContact);\n    toggleOpen();\n  };\n\t\n  return (\n    <>\n      <SortedBtns />\n\t\t  {isLoading ? (\n\t\t\t  <LoaderStyled>\n\t\t\t\t  {' '}\n\t\t\t\t  <Loader color={'#0fc1dd'} size={'50'} />\n\t\t\t  </LoaderStyled>\n\t\t  ) : (\n\t\t\t  <List>\n\t\t\t\t  {visibleContacts.map(({ name, number, id }) => {\n\t\t\t\t\t  return (\n\t\t\t\t\t\t  <ListItem data-id={id} key={id}>\n\t\t\t\t\t\t\t  {name}: {number}\n\t\t\t\t\t\t\t  <BtnWrapper>\n\t\t\t\t\t\t\t\t  <Btn type=\"button\" onClick={handleClick}>\n\t\t\t\t\t\t\t\t\t  <RiEditLine size=\"20\" />\n\t\t\t\t\t\t\t\t  </Btn>\n\t\t\t\t\t\t\t\t  <Btn\n\t\t\t\t\t\t\t\t\t  delete\n\t\t\t\t\t\t\t\t\t  type=\"button\"\n\t\t\t\t\t\t\t\t\t  onClick={() => dispatch(deleteContact(id))}\n\t\t\t\t\t\t\t\t  >\n\t\t\t\t\t\t\t\t\t  {isLoading ? (\n\t\t\t\t\t\t\t\t\t\t  <Loader color={'#ffffff'} size={'20'} />\n\t\t\t\t\t\t\t\t\t  ) : (\n\t\t\t\t\t\t\t\t\t\t  <RiDeleteBin2Line size=\"20\" />\n\t\t\t\t\t\t\t\t\t  )}\n\t\t\t\t\t\t\t\t  </Btn>\n\t\t\t\t\t\t\t  </BtnWrapper>\n\t\t\t\t\t\t\t  {isModalOpen && (\n\t\t\t\t\t\t\t\t  <Modal toggleOpen={toggleOpen} contactInfo={targetContact} />\n\t\t\t\t\t\t\t  )}\n\t\t\t\t\t\t  </ListItem>\n\t\t\t\t\t  );\n\t\t\t\t  })}\n\t\t\t  </List>\n\t\t  )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  background-color: white;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { Input, AddButton, Form, Title } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { RiContactsLine } from 'react-icons/ri';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value };\n    if (contacts.find(existingContact => existingContact.name === name.value)) {\n      Notiflix.Notify.failure(`${contact.name} is already in your contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n        />\n        <AddButton type=\"submit\">\n          <span>Add contacts </span>\n          {isLoading ? (\n            <Loader color={'#ffffff'} size={'20'} />\n          ) : (\n            <RiContactsLine size=\"20\" />\n          )}\n        </AddButton>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  min-width: 400px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 15px 25px;\n\n  border: 0;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  background-color: white;\n\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n`;\n","import { FilterInput, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        onChange={handleChange}\n      ></FilterInput>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Title, Message, ContactsWrapper, Section } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Section>\n      <div>\n        <ContactForm />\n        <Filter />\n      </div>\n      <div>\n        <Title>Contacts</Title>\n        <ContactsWrapper>\n          {contacts.length > 0 ? (\n            <ContactsList />\n          ) : (\n            <Message>Add your first contact</Message>\n          )}\n        </ContactsWrapper>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["Section","styled","Title","ContactsWrapper","Message","selectContacts","state","contacts","selectIsLoading","isLoading","selectSortedAlphabetic","sortedAlphabetic","selectRecentlyAdded","recentlyAdded","selectVisibleContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","LoaderStyled","List","ListItem","Btn","proprs","delete","BtnWrapper","Overlay","ModalWindow","BtnClose","Icon","AiOutlineCloseCircle","Form","Input","AddButton","contactInfo","toggleOpen","number","id","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","target","value","editContact","onClick","size","type","pattern","title","required","placeholder","defaultValue","Loader","SortBtn","sortByName","sortByAdded","visibleContacts","useState","isModalOpen","setIsModalOpen","targetContact","setTargetContact","handleClick","currentTarget","parentNode","dataset","find","color","map","deleteContact","existingContact","Notiflix","addContact","reset","Label","FilterInput","onChange","setFilter","useEffect","fetchContacts","length","ContactsList"],"sourceRoot":""}